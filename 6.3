// Абстрактный класс, представляющий мебель
abstract class Furniture {
    private String type; // Тип мебели
    private String material; // Материал мебели

    // Конструктор класса Furniture
    public Furniture(String type, String material) {
        this.type = type;
        this.material = material;
    }

    // Геттер для получения типа мебели
    public String getType() {
        return type;
    }

    // Геттер для получения материала мебели
    public String getMaterial() {
        return material;
    }

    // Абстрактный метод для вывода информации о мебели
    public abstract void displayInfo();
}

// Наследник класса Furniture - класс Chair, представляющий стул
class Chair extends Furniture {
    private int numberOfLegs; // Количество ног у стула

    // Конструктор класса Chair
    public Chair(String material, int numberOfLegs) {
        super("Chair", material);
        this.numberOfLegs = numberOfLegs;
    }

    // Реализация абстрактного метода для вывода информации о стуле
    @Override
    public void displayInfo() {
        System.out.println("Type: " + getType() + ", Material: " + getMaterial() + ", Number of Legs: " + numberOfLegs);
    }
}

// Наследник класса Furniture - класс Bed, представляющий кровать
class Bed extends Furniture {
    private String size; // Размер кровати

    // Конструктор класса Bed
    public Bed(String material, String size) {
        super("Bed", material);
        this.size = size;
    }

    // Реализация абстрактного метода для вывода информации о кровати
    @Override
    public void displayInfo() {
        System.out.println("Type: " + getType() + ", Material: " + getMaterial() + ", Size: " + size);
    }
}

// Класс FurnitureShop, представляющий магазин мебели
class FurnitureShop {
    private List<Furniture> furnitureList; // Список для хранения мебели

    // Конструктор класса FurnitureShop
    public FurnitureShop() {
        furnitureList = new ArrayList<>();
    }

    // Метод для добавления мебели в магазин
    public void addFurniture(Furniture furniture) {
        furnitureList.add(furniture);
    }

    // Метод для отображения информации о мебели в магазине
    public void displayFurniture() {
        System.out.println("Furniture in the shop:");
        for (Furniture furniture : furnitureList) {
            furniture.displayInfo();
        }
    }

    public static void main(String[] args) {
        // Создание объектов мебели различных видов
        Furniture chair = new Chair("Wood", 4);
        Furniture bed = new Bed("Metal", "King Size");

        // Создание магазина мебели
        FurnitureShop furnitureShop = new FurnitureShop();

        // Добавление мебели в магазин
        furnitureShop.addFurniture(chair);
        furnitureShop.addFurniture(bed);

        // Вывод информации о мебели с помощью магазина
        furnitureShop.displayFurniture();
    }
}
