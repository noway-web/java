// Абстрактный суперкласс Shape
abstract class Shape {
    protected String color;  // Цвет фигуры
    protected boolean filled;  // Закрашена ли фигура

    // Конструктор
    public Shape(String color, boolean filled) {
        this.color = color;
        this.filled = filled;
    }

    // Геттер и сеттер для цвета
    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }

    // Геттер и сеттер для filled
    public boolean isFilled() {
        return filled;
    }

    public void setFilled(boolean filled) {
        this.filled = filled;
    }

    // Абстрактные методы для вычисления площади и периметра
    public abstract double getArea();
    public abstract double getPerimeter();

    // Переопределение метода toString()
    @Override
    public String toString() {
        return "Shape[color=" + color + ", filled=" + filled + "]";
    }
}

// Подкласс Circle (круг)
class Circle extends Shape {
    protected double radius;  // Радиус круга

    // Конструктор
    public Circle(double radius, String color, boolean filled) {
        super(color, filled);
        this.radius = radius;
    }

    // Переопределение метода для вычисления площади круга
    @Override
    public double getArea() {
        return Math.PI * radius * radius;
    }

    // Переопределение метода для вычисления периметра круга
    @Override
    public double getPerimeter() {
        return 2 * Math.PI * radius;
    }

    // Переопределение метода toString()
    @Override
    public String toString() {
        return "Circle[" + super.toString() + ", radius=" + radius + "]";
    }
}

// Подкласс Rectangle (прямоугольник)
class Rectangle extends Shape {
    protected double width;  // Ширина прямоугольника
    protected double length;  // Длина прямоугольника

    // Конструктор
    public Rectangle(double width, double length, String color, boolean filled) {
        super(color, filled);
        this.width = width;
        this.length = length;
    }

    // Переопределение метода для вычисления площади прямоугольника
    @Override
    public double getArea() {
        return width * length;
    }

    // Переопределение метода для вычисления периметра прямоугольника
    @Override
    public double getPerimeter() {
        return 2 * (width + length);
    }

    // Переопределение метода toString()
    @Override
    public String toString() {
        return "Rectangle[" + super.toString() + ", width=" + width + ", length=" + length + "]";
    }
}
