public class Student {
    private int iDNumber;
    private String name;

    public Student(int iDNumber, String name) {
        this.iDNumber = iDNumber;
        this.name = name;
    }

    public int getIDNumber() {
        return iDNumber;
    }

    public String getName() {
        return name;
    }
}

public class InsertionSortTest {
    // Метод сортировки вставками для массива студентов по iDNumber
    public static void insertionSortStudentsByID(Student[] students) {
        int n = students.length;
        for (int i = 1; i < n; ++i) {
            Student key = students[i];
            int j = i - 1;

            // Перемещение элементов, больших чем key, на одну позицию вперед
            // для создания правильного места для вставки key
            while (j >= 0 && students[j].getIDNumber() > key.getIDNumber()) {
                students[j + 1] = students[j];
                j = j - 1;
            }
            // Вставка key в правильное место
            students[j + 1] = key;
        }
    }

    public static void main(String[] args) {
        // Создание массива объектов класса Student
        Student[] students = {
            new Student(3, "Alice"),
            new Student(1, "Bob"),
            new Student(2, "Charlie"),
            new Student(4, "David")
        };

        // Сортировка массива студентов по iDNumber сортировкой вставками
        insertionSortStudentsByID(students);

        // Вывод отсортированного массива
        System.out.println("Sorted by IDNumber:");
        for (Student student : students) {
            System.out.println("ID: " + student.getIDNumber() + ", Name: " + student.getName());
        }
    }
}
